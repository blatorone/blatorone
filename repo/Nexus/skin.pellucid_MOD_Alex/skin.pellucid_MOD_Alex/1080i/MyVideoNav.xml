<?xml version="1.0" encoding="UTF-8"?>
<window>
    <defaultcontrol always="true">503</defaultcontrol>
    <onload condition="Skin.hassetting(stopVideoOnMenu) + !Player.HasAudio">PlayerControl(stop)</onload>
    <onload>Skin.SetString(recentitems,video)</onload>
	
    <include>fadeInOut</include>
	<views>50,51,52,53,54,55,56,57,59,500,501,502,503,504,505,506,507,508,509,591,602,603,609</views>
    <controls>
        
			

        <!--page container group-->
        <control type="group">
            <!--shift page for certain modal dialogs-->
            <include>modalDialogContentShift</include>
            <!--Backbutton touchscreen-->
            <include>Backbuttoncross</include>
            
            <!--Main content listing-->
            <control type="group" id="9999">
                <!--Battery Level-->
                <include>Battery</include>
                <include>contentOpen</include>
                <!--source content-->
                <control type="group" id="9500">
                    <include>View_50_List</include>
                    <!--
                    <include>View_51_InfoWall</include>
                    <include>View_52_Landscape</include>
                    
                    -->
                    <include>View_53_ShowCase</include>
                    <include>View_54_ShowCase</include>
                    <!--
                    <include>View_55_TriPanel</include>
                    <include>View_56_Posters</include>
                    <include>View_57_Shift</include>
                    <include>View_58_BannerWall</include>
                    <include>View_59_Logo</include>
                    <include>View_500_Icons</include>
                    <include>View_501_LowList</include>
                    <include>View_502_Episode</include>
                    -->
                    <include>View_503_Wall</include>
                    <include>View_505_Panel</include>
                    <!--
                    <include>View_504_Gallery</include>
                    <include>View_505_Panel</include>
                    <include>View_506_RightList</include>
                    <include>View_507_BigList</include>
                    <include>View_508_SongList</include>
                    <include>View_509_MyFlix</include>
                    <include>View_591_BigFan</include>
                    <include>View_602_FanartList</include>
                    <include>View_603_Music_JukeBox</include>
                    -->
                    <include>View_609_Fullscreen_Wall</include>
			
                </control>
                <control type="group">
					<visible>Control.IsVisible(52) | Control.IsVisible(53) | Control.IsVisible(503)</visible>
					<include>ViewAnimation</include>
					<control type="group">
						<visible>!ListItem.IsCollection</visible>
						<animation effect="slide" end="0,70" condition="Container.Content(genres) + Control.IsVisible(53) + Skin.HasSetting(ShowCaseGenreLabels)">Conditional</animation>
						<animation effect="slide" end="0,12" condition="[Control.IsVisible(52) + Container.Content(movies) + Skin.HasSetting(Disable.Landscape.MovieGenre)] | [Control.IsVisible(53) + Container.Content(movies) + Skin.HasSetting(Disable.Showcase.MovieGenre)] | [Control.IsVisible(503) + Container.Content(movies) + Skin.HasSetting(Disable.Wall.MovieGenre)]">Conditional</animation>
						<animation effect="slide" end="0,34" condition="Control.IsVisible(53) + Container.Content(movies) + Skin.HasSetting(Enable.ShowCase.Logo) + String.IsEmpty(ListItem.Art(clearlogo)) | Control.IsVisible(52) + Container.Content(movies) + Skin.HasSetting(Enable.Landscape.Logo) | Control.IsVisible(503) + [Container.Content(movies) | Container.Content(tvshows)] + Skin.HasSetting(Enable.Wall.Logo) + String.IsEmpty(ListItem.Art(clearlogo))">Conditional</animation>
						<control type="group">
							<visible>[Control.IsVisible(52) + Container.Content(movies) + !Skin.HasSetting(Disable.Landscape.MovieInfo) + [!Skin.HasSetting(Enable.Landscape.Logo)] | [Skin.HasSetting(Enable.Landscape.Logo) + String.IsEmpty(ListItem.Art(clearlogo))]] | [Control.IsVisible(52) + Container.Content(tvshows) + !Skin.HasSetting(Disable.Landscape.TVInfo) + [!Skin.HasSetting(Enable.Landscape.Logo)] | [Control.IsVisible(52) + Container.Content(episodes) + !Skin.HasSetting(Disable.Landscape.EpisodeInfo)]] | [Control.IsVisible(53) + Container.Content(movies) + !Skin.HasSetting(Disable.ShowCase.MovieInfo) + [!Skin.HasSetting(Enable.ShowCase.Logo)] | [Skin.HasSetting(Enable.ShowCase.Logo) + String.IsEmpty(ListItem.Art(clearlogo))]] | [Control.IsVisible(53) + Container.Content(tvshows) + !Skin.HasSetting(Disable.ShowCase.TVInfo) + !Skin.HasSetting(Enable.ShowCase.Logo)] | [Control.IsVisible(53) + Container.Content(seasons) + !Skin.HasSetting(Disable.ShowCase.FloorInfo.seasons) + !Skin.HasSetting(Enable.ShowCase.SeasonBanner)] | [Control.IsVisible(503) + Container.Content(movies) + !Skin.HasSetting(Disable.Wall.MovieInfo) + [!Skin.HasSetting(Enable.Wall.Logo) | [Skin.HasSetting(Enable.Wall.Logo) + String.IsEmpty(ListItem.Art(clearlogo))]]] | [Control.IsVisible(503) + Container.Content(tvshows) + !Skin.HasSetting(Disable.Wall.TVInfo) + [!Skin.HasSetting(Enable.Wall.Logo) | [Skin.HasSetting(Enable.Wall.Logo) + String.IsEmpty(ListItem.Art(clearlogo))]]] | [Control.IsVisible(503) + Container.Content(seasons) + Skin.HasSetting(Enable.Wall.FloorInfo.seasons)] | Container.Content(genres) + Control.IsVisible(53) + Skin.HasSetting(ShowCaseGenreLabels)</visible>
							<visible>![Container.Content(files) + Control.IsVisible(503)]</visible>
							<control type="label">
								<left>532</left>
								<top>985</top>
								<width>856</width>
								<height>46</height>
								<align>center</align>
								<font>regular</font>
								<scroll>true</scroll>
								<shadowcolor>shadow</shadowcolor>
								<label>$VAR[FloorLabelVar]</label>
							</control>
							<control type="group">
								<left>532</left>
								<top>1030</top>
								<visible>[Control.IsVisible(52) + Container.Content(movies) + !Skin.HasSetting(Disable.Landscape.MovieInfo) + !Skin.HasSetting(Enable.Landscape.Logo)] | [Control.IsVisible(52) + Container.Content(tvshows) + !Skin.HasSetting(Disable.Landscape.TVInfo) + !Skin.HasSetting(Enable.Landscape.Logo)] | [Control.IsVisible(52) + Container.Content(episodes) + !Skin.HasSetting(Disable.Landscape.EpisodeInfo)] | [Control.IsVisible(53) + Container.Content(movies) + !Skin.HasSetting(Disable.ShowCase.MovieInfo) + [!Skin.HasSetting(Enable.ShowCase.Logo)]] | [Control.IsVisible(53) + Container.Content(tvshows) + !Skin.HasSetting(Disable.ShowCase.TVInfo) + [!Skin.HasSetting(Enable.ShowCase.Logo)]] | [Control.IsVisible(53) + Container.Content(seasons) + !Skin.HasSetting(Disable.ShowCase.FloorInfo.seasons) + !Skin.HasSetting(Enable.ShowCase.SeasonBanner)] | [Control.IsVisible(503) + [Container.Content(movies) | Container.Content(sets)] + !Skin.HasSetting(Disable.Wall.MovieInfo) + [!Skin.HasSetting(Enable.Wall.Logo)]] | [Control.IsVisible(503) + Container.Content(sets) + !Skin.HasSetting(Disable.Wall.SetInfo) + [!Skin.HasSetting(Enable.Wall.SetLogo)]] | [Control.IsVisible(503) + Container.Content(tvshows) + !Skin.HasSetting(Disable.Wall.TVInfo) + !Skin.HasSetting(Enable.Wall.Logo)] | [Control.IsVisible(503) + Container.Content(seasons) + Skin.HasSetting(Enable.Wall.FloorInfo.seasons) + !Skin.HasSetting(Enable.Wall.SeasonBanner)]</visible>
								<control type="label">
									<width>856</width>
									<height>30</height>
									<align>center</align>
									<font>regular</font>
									<textcolor>grey</textcolor>
									<shadowcolor>shadow</shadowcolor>
									<label>$VAR[FloorSubLabelVar]</label>
									<textoffsetx>30</textoffsetx>
								</control>
								<control type="label">
									<top>38</top>
									<width>856</width>
									<height>22</height>
									<align>center</align>
									<font>regular</font>
									<shadowcolor>shadow</shadowcolor>
									<label>$INFO[ListItem.Genre]</label>
									<textoffsetx>30</textoffsetx>
									<visible>Control.IsVisible(52) + [Container.Content(movies) + !Skin.HasSetting(Disable.Landscape.MovieGenre)] | Control.IsVisible(53) + [Container.Content(movies) + !Skin.HasSetting(Disable.Showcase.MovieGenre)] | Control.IsVisible(53) + [Container.Content(tvshows) + Skin.HasSetting(Enable.Showcase.TVShowGenre)] | Control.IsVisible(52) + [Container.Content(tvshows) + Skin.HasSetting(Enable.Landscape.TVShowGenre)] | Control.IsVisible(503) + [Container.Content(movies) + !Skin.HasSetting(Disable.Wall.MovieGenre)] | Control.IsVisible(503) + [Container.Content(tvshows) + Skin.HasSetting(Enable.Wall.TVShowGenre)]</visible>
								</control>
								<control type="group">
									<visible>[Control.IsVisible(52) + Container.Content(tvshows) + !Skin.HasSetting(Enable.Landscape.TVShowGenre)] | [Control.IsVisible(53) + Container.Content(tvshows) + !Skin.HasSetting(Enable.Showcase.TVShowGenre)] | [Control.IsVisible(503) + Container.Content(tvshows) + !Skin.HasSetting(Enable.Wall.TVShowGenre)]</visible>
									<left>-272</left>
									<top>38</top>
									<!-- Next Aired -->
									<control type="label">
										<width>1400</width>
										<height>22</height>
										<align>center</align>
										<font>regular</font>
										<shadowcolor>shadow</shadowcolor>
										<label>$VAR[NextAiredSubLabelVar]</label>
										<textoffsetx>30</textoffsetx>
										<animation effect="fade" time="250" delay="300" reversible="false" condition="!Container(52).OnNext + !Container(52).OnPrevious">Conditional</animation>
										<animation effect="fade" time="250" delay="300" reversible="false" condition="!Container(53).OnNext + !Container(53).OnPrevious">Conditional</animation>
										<animation effect="fade" time="250" delay="300" reversible="false" condition="!Container(503).OnNext + !Container(503).OnPrevious">Conditional</animation>
										<animation effect="fade" time="250" delay="300" reversible="false">Visible</animation>
										<visible>String.IsEmpty(Window(Home).Property(TMDbHelper.IsUpdating))</visible>
									</control>
								</control>
								<control type="label">
									<top>38</top>
									<width>800</width>
									<height>25</height>
									<align>center</align>
									<font>regular</font>
									<textcolor>$VAR[UnWatchedEpColor]</textcolor>
									<shadowcolor>shadow</shadowcolor>
									<label>[COLOR grey]$LOCALIZE[20360]: $INFO[ListItem.Property(TotalEpisodes)][/COLOR] $INFO[ListItem.Property(UnWatchedEpisodes), ($LOCALIZE[16101]: ,)]</label>
									<textoffsetx>30</textoffsetx>
									<visible>[Control.IsVisible(53) + Container.Content(seasons)]</visible>
								</control>
								<control type="label">
									<top>38</top>
									<width>800</width>
									<height>25</height>
									<align>center</align>
									<font>regular</font>
									<shadowcolor>shadow</shadowcolor>
									<label>$INFO[ListItem.Premiered,$LOCALIZE[31452]: ]</label>
									<textoffsetx>30</textoffsetx>
									<visible>[Control.IsVisible(52) + Container.Content(episodes) + !Skin.HasSetting(Disable.Landscape.EpisodeInfo)]</visible>
								</control>
							</control>
						</control>
						<!-- Music Videos -->
						<control type="group">
							<top>1010</top>
							<visible>Container.Content(musicvideos) + Control.IsVisible(53) + !Skin.HasSetting(Enable.ShowCase.MusicVidLogo)</visible>
							<control type="grouplist">
								<left>60</left>
								<width>1800</width>
								<height>46</height>
								<align>center</align>
								<itemgap>10</itemgap>
								<orientation>horizontal</orientation>
								<control type="label">
									<width>auto</width>
									<height>46</height>
									<align>center</align>
									<font>regular</font>
									<scroll>true</scroll>
									<shadowcolor>shadow</shadowcolor>
									<label>$VAR[FloorLabelVar]</label>
								</control>
							</control>
							<control type="label">
								<left>60</left>
								<top>52</top>
								<width>1800</width>
								<height>30</height>
								<align>center</align>
								<font>regular</font>
								<textcolor>grey</textcolor>
								<shadowcolor>shadow</shadowcolor>
								<label>$VAR[FloorSubLabelVar]</label>
							</control>
						</control>
					</control>
					<!-- SETS -->
					<control type="group">
						<animation effect="fade" time="140" delay="100">Visible</animation>
						<animation effect="fade" time="140" delay="600">WindowOpen</animation>
						<left>450</left>
						<top>997</top>
						<control type="group">
							<visible>[[[!Skin.HasSetting(Enable.Landscape.Logo) + !Skin.HasSetting(Disable.Landscape.MovieInfo)] | [Skin.HasSetting(Enable.Landscape.Logo) + String.IsEmpty(ListItem.Art(clearlogo))]] + Control.IsVisible(52) + Container.Content(movies)] | [[[!Skin.HasSetting(Enable.Landscape.SetLogo) + !Skin.HasSetting(Disable.Landscape.SetInfo)] | [Skin.HasSetting(Enable.Landscape.SetLogo) + String.IsEmpty(ListItem.Art(clearlogo))]] + Control.IsVisible(52) + Container.Content(sets)] | [[[!Skin.HasSetting(Enable.ShowCase.Logo) + !Skin.HasSetting(Disable.ShowCase.MovieInfo)] | [Skin.HasSetting(Enable.ShowCase.Logo) + String.IsEmpty(ListItem.Art(clearlogo))]] + Control.IsVisible(53) + Container.Content(movies)] | [[[!Skin.HasSetting(Enable.ShowCase.SetLogo) + !Skin.HasSetting(Disable.ShowCase.SetInfo)] | [Skin.HasSetting(Enable.ShowCase.SetLogo) + String.IsEmpty(ListItem.Art(clearlogo))]] + Control.IsVisible(53) + Container.Content(sets)] | [[[!Skin.HasSetting(Enable.Wall.Logo) + !Skin.HasSetting(Disable.Wall.MovieInfo)] | [Skin.HasSetting(Enable.Wall.Logo) + String.IsEmpty(ListItem.Art(clearlogo))]] + Control.IsVisible(503) + Container.Content(movies)] | [[[!Skin.HasSetting(Enable.Wall.SetLogo) + !Skin.HasSetting(Disable.Wall.SetInfo)] | [Skin.HasSetting(Enable.Wall.SetLogo) + String.IsEmpty(ListItem.Art(clearlogo))]] + Control.IsVisible(503) + Container.Content(sets)]</visible>
							<animation effect="slide" end="0,-12" condition="[Control.IsVisible(52) + !Skin.HasSetting(Disable.Landscape.MovieGenre) + ![Skin.HasSetting(Enable.Landscape.Logo) + String.IsEmpty(ListItem.Art(clearlogo))]] | [Control.IsVisible(53) + !Skin.HasSetting(Disable.ShowCase.MovieGenre) + ![Skin.HasSetting(Enable.ShowCase.Logo) + String.IsEmpty(ListItem.Art(clearlogo))]] | [Control.IsVisible(503) + !Skin.HasSetting(Disable.Wall.MovieGenre) + ![Skin.HasSetting(Enable.Wall.Logo) + String.IsEmpty(ListItem.Art(clearlogo))]]">Conditional</animation>
							<animation effect="slide" end="0,22" condition="[Control.IsVisible(52) + Container.Content(movies) + Skin.HasSetting(Enable.Landscape.Logo)] | [Control.IsVisible(53) + Container.Content(movies) + Skin.HasSetting(Enable.ShowCase.Logo)] | [Control.IsVisible(503) + Container.Content(movies) + Skin.HasSetting(Enable.Wall.Logo)] | [Control.IsVisible(52) + Container.Content(sets) + Skin.HasSetting(Enable.Landscape.SetLogo)] | [Control.IsVisible(53) + Container.Content(sets) + Skin.HasSetting(Enable.ShowCase.SetLogo)] | [Control.IsVisible(503) + Container.Content(sets) + Skin.HasSetting(Enable.Wall.SetLogo)]">Conditional</animation>
							<control type="label">
								<width>1020</width>
								<height>46</height>
								<align>center</align>
								<font>regular</font>
								<scroll>true</scroll>
								<shadowcolor>shadow</shadowcolor>
								<label>$INFO[ListItem.Label]</label>
							</control>
							<control type="group">
								<visible>[[[Container.Content(movies) + !Skin.HasSetting(Enable.Landscape.Logo)] | [Container.Content(sets) + !Skin.HasSetting(Enable.Landscape.SetLogo)]] + Control.IsVisible(52)] | [[[Container.Content(movies) + !Skin.HasSetting(Enable.ShowCase.Logo)] | [Container.Content(sets) + !Skin.HasSetting(Enable.ShowCase.SetLogo)]] + Control.IsVisible(53)] | [[[Container.Content(movies) + !Skin.HasSetting(Enable.Wall.Logo)] | [Container.Content(sets) + !Skin.HasSetting(Enable.Wall.SetLogo)]] + Control.IsVisible(503)]</visible>
								<top>45</top>
								<control type="label">
									<width>1020</width>
									<height>30</height>
									<align>center</align>
									<font>regular</font>
									<textcolor>grey</textcolor>
									<shadowcolor>shadow</shadowcolor>
									<label>$INFO[Container(4500).ListItem(0).Year]$INFO[Container(4500).ListItem(-1).Year, - ]$INFO[Container(4500).NumItems, • , $LOCALIZE[342]]$INFO[ListItem.RatingAndVotes, • ]$INFO[Window(Home).Property(SkinInfo.Set.Movies.Runtime), • , $LOCALIZE[12391]]</label>
									<textoffsetx>30</textoffsetx>
									<visible>!String.IsEqual(Container(4500).NumItems,0)</visible>
								</control>
								<control type="label">
									<top>38</top>
									<width>1020</width>
									<height>22</height>
									<align>center</align>
									<font>regular</font>
									<shadowcolor>shadow</shadowcolor>
									<label>$VAR[MovieSetGenreVar]</label>
									<textoffsetx>30</textoffsetx>
									<visible>[Control.IsVisible(52) + !Skin.HasSetting(Disable.Landscape.MovieGenre)] | [Control.IsVisible(53) + !Skin.HasSetting(Disable.Showcase.MovieGenre)] | [Control.IsVisible(503) + !Skin.HasSetting(Disable.Wall.MovieGenre)]</visible>
								</control>
							</control>
						</control>
					</control>
				</control>
                <control type="button" id="3000">
                <posx>0</posx>
                <posy>500</posy>
                <textwidth>352</textwidth>
                <font>symbolLarge</font>
                <align>center</align>
                <aligny>center</aligny>
                <width>1-col</width>
                <label></label>
                <label2></label2>
                <textcolor>black</textcolor>
                <focusedcolor>black</focusedcolor>
                <texturefocus colordiffuse="$VAR[highlight]">Colors/white.png</texturefocus>
                <texturenofocus colordiffuse="$VAR[highlight]">Colors/white.png</texturenofocus>
                <onclick>setfocus(9000)</onclick>
                <visible>skin.hassetting(Touch) + [!control.hasfocus(500) + !control.hasfocus(9001)]</visible>
            </control>
            
                <include content="keyboard select">
                    <param name="posx">87%</param>
                    <param name="focus">9999</param>
                    <param name="up">up</param>
                    <param name="down">down</param>
                    <param name="left">left</param>
                    <param name="right">right</param>
                    <param name="select">select</param>
                    <param name="back">back</param>
                </include>
            </control>
            <!--page scrollbar-->
            <control type="group" id="8000">
				<control type="group">
                	<visible>Control.IsVisible(60)</visible>
	                <animation effect="fade" start="100" end="0" time="100" condition="!controlgroup(8000).hasfocus">conditional</animation>
	                <control type="scrollbar" id="60">
	                    <posx>54r</posx>
	                    <posy>row-8-begin</posy>
	                    <height>17-row</height>
	                    <onleft>9999</onleft>
	                    <onback>9999</onback>
                        <onright>7000</onright>
                        <onup>7000</onup>
                        
	                </control>
				</control>
				<control type="group">
	                <visible>Control.IsVisible(61)</visible>
	                <animation effect="fade" start="100" end="0" time="100" condition="!controlgroup(8000).hasfocus">conditional</animation>
	                <control type="scrollbar" id="61">
	                    <posx>54r</posx>
	                    <posy>row-8-begin</posy>
	                    <height>17-row</height>
	                    <onleft>9999</onleft>
	                    <onback>9999</onback>
                        <onright>7000</onright>
                        <onup>7000</onup>
	                </control>
	            </control>
            </control>        
            <!--page header-->
            <control type="group">
				<include>pageHeader</include>    
            </control>
        </control>
        <!--mini window-->
        <include>miniVideoPlayer</include>
        <!--hub menu-->
        <include>hubMenu</include>
        <!--loading indicator-->
        <include>loadingIndicator</include>
        <control type="label">
					<visible>control.isEnabled(54)</visible>
		    		<animation type="conditional" condition="player.playing" reversible="true">
		    			<effect type="slide" start="0,0" end="0,45" time="200" delay="0"/>
        			</animation>
        			<posx>300</posx>
        			<posy>15</posy>
        			<width>1395</width> 
        			<height>1-row</height>
        			<font>small</font>
        			<scroll>true</scroll>
        			<textcolor>textActive</textcolor>
        			<align>left</align>
					<label>[B]$INFO[ListItem.label][/B]</label>
					</control>
        <!--debugging-->
        <include>DebugGrid</include>
        <control type="label">
            <include>WindowID</include>
            <label>MyVideoNav.xml path: $INFO[container.folderpath] folder: $INFO[container.foldername] content: $INFO[container.content]</label>
        </control>
    </controls>
</window>