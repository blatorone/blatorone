<?xml version="1.0" encoding="UTF-8"?>
<includes>
    <include file="Defaults.xml"/>
    <include file="Includes_grid.xml"/>
    <include file="Includes_variables.xml"/>
    <include file="Includes_ViewSettings.xml"/>
    <include file="Includes_animations.xml"/>
    <include file="Includes_hubMenu.xml"/>
    <include file="Includes_hubOptionsItems.xml"/>
    <include file="View_LiveTVChannels.xml"/>
    <include file="Variables.xml" />
    <include file="View_50_List.xml"/>
    <include file="View_51_InfoWall.xml"/>
    <include file="View_52_Landscape.xml"/>
    <include file="View_53_ShowCase.xml"/>
    <include file="View_54_ShowCase.xml"/>
    <include file="View_55_TriPanel.xml"/>
    <include file="View_56_Posters.xml.xml"/>
    <include file="View_57_Shift.xml"/>
    <include file="View_58_BannerWall.xml"/>
    <include file="View_59_Logo.xml"/>
    <include file="View_500_Icons.xml"/>
    <include file="View_501_LowList.xml"/>
    <include file="View_502_Episode.xml"/>
    <include file="View_503_Wall.xml"/>
    <include file="View_504_Gallery.xml"/>
    <include file="View_505_Panel.xml"/>
    <include file="View_506_RightList.xml"/>
    <include file="View_507_BigList.xml"/>
    <include file="View_508_SongList.xml"/>
    <include file="View_509_MyFlix.xml"/>
    <include file="View_591_BigFan.xml"/>
    <include file="View_602_FanartList.xml"/>
    <include file="View_603_Music_JukeBox.xml"/>
    <include file="View_609_Fullscreen_Wall.xml"/>
    <include file="View_TVShows.xml"/>
    <include file="View_MusicGenres.xml"/>
    <include file="View_VideoFiles.xml"/>
    <include file="View_Photos.xml"/>
    <include file="View_Artists.xml"/>
    <include file="View_Albums.xml"/>
    <include file="View_Songs.xml"/>
    <include file="View_MusicFiles.xml"/> 
    <include file="View_MusicPlaylist.xml"/>
    <include file="View_ArtistAlbums.xml"/>
    <include file="View_MusicVideos.xml"/>
	<include file="View_Games.xml"/>
	<include file="View_SpotifyAlbums.xml"/>
	<include file="View_SpotifyArtists.xml"/>
    <include file="script-skinshortcuts-includes.xml"/>
    <include file="Includes_mediaShowcase.xml"/>
    <constant name="DepthOSD">0.40</constant>
	<constant name="DepthOSD+">0.44</constant>
    <include file="MyVideoNav"/>

    

    <!--view type conditions-->
    <expression name="isVideoList">!String.Contains(container.folderpath,special://profile/playlists/video) + !String.Contains(container.folderpath,videodb://) + !String.Contains(container.folderpath,plugin://) | container.content(files) | String.IsEmpty(container.content) | container.content(addons) | container.content(videos) | container.content(episodes)</expression>
    <expression name="isMovie">container.content(movies) + [String.Contains(container.folderpath,videodb://) | String.Contains(container.folderpath,special://profile/playlists/video)]</expression>
    <expression name="isAddonMovieOrTVshow">!String.Contains(container.folderpath,videodb://) + String.Contains(container.folderpath,plugin://) + [container.content(movies) | container.content(tvshows) | container.content(seasons)]</expression>

    <expression name="isTVShow">container.content(tvshows) + [String.Contains(container.folderpath,videodb://) | String.Contains(container.folderpath,special://profile/playlists/video)]</expression>
    <expression name="isSeason">container.content(seasons) + String.Contains(container.folderpath,videodb://)</expression>
    <expression name="isEpisode">container.content(episodes) + !String.Contains(Container.folderpath,plugin)</expression>
    <expression name="isMusicVideo">container.content(musicvideos) + !String.Contains(Container.folderpath,plugin)</expression>

	<expression name="isMusicSpotifyArtist">container.content(artists) + String.Contains(container.folderpath,spotify)</expression>
	<expression name="isMusicSpotifyAlbum">container.content(albums) + String.Contains(container.folderpath,spotify)</expression>

	<expression name="isMusicList">!String.Contains(container.folderpath,musicdb://) | String.Contains(container.foldername,Files) | container.content(files) | container.content(addons) | [container.content(playlists) + !String.Contains(Container.folderpath,special://profile/playlists)] | String.Contains(Container.folderpath,plugin://)</expression>
	<expression name="isMusicArtist">container.content(artists) + [String.Contains(container.folderpath,musicdb://) | String.Contains(Container.folderpath,special://profile/playlists)]</expression>
	<expression name="isMusicArtistCatalogue">container.content(albums) + String.Contains(container.folderpath,albumartistsonly)</expression>
	<expression name="isMusicAlbum">container.content(albums) + [String.Contains(container.folderpath,musicdb://) | String.Contains(Container.folderpath,special://profile/playlists)]</expression>
	<expression name="isMusicGenre">container.content(genres) + String.Contains(container.folderpath,musicdb://)</expression>
	<expression name="isMusicSong">container.content(songs) + [String.Contains(Container.folderpath,musicdb://) | String.Contains(Container.folderpath,spotify)]</expression>
	<expression name="isMusicPlaylist">container.content(songs) + [String.Contains(Container.folderpath,.xsp) | String.Contains(Container.foldername,PartyMode) | String.Contains(Container.folderpath,playlistmusic://)]</expression>

	<!--photos-->
	<expression name="isPhotoAlbum">container.content(images)</expression>
	
	<!--games-->
	<expression name="isGame">container.content(games)</expression>

	<!--weather-->
	<expression name="hasWeather">!String.IsEmpty(Window(Weather).Property(WeatherProvider)) + !String.String.IsEmpty(weather.temperature) + !String.String.IsEmpty(weather.conditions)</expression>

	<!--item fanart-->
    <include name="itemFanart">
        <control type="wraplist" id="99999">
            <posx>0</posx>
            <posy>0</posy>
            <width>1000</width>
            <height>1000</height>
            <enable>false</enable>
            <preloaditems>2</preloaditems>
            <scrolltime>15000</scrolltime>
            <autoscroll>true</autoscroll>
            <itemlayout />
            <focusedlayout />
            <content>$VAR[extraFanartLocation]</content>
        </control>
		<control type="image">
            <include>dimensionsFullscreen</include>
            <texture>colors/white.png</texture>
            <colordiffuse>background</colordiffuse>
            <aspectratio>stretch</aspectratio>
        </control>
        <control type="image">
            <visible>Integer.IsGreater(container(99999).numitems,0) + !Skin.HasSetting(disableExtendedFanart)</visible>
            <include>dimensionsFullscreen</include>
            <texture>$INFO[container(99999).listitem.filenameandpath,,]</texture>
            <colordiffuse>66ffffff</colordiffuse>
            <fadetime>500</fadetime>
            <aspectratio>stretch</aspectratio>
			<include>kenBurnsey</include>
        </control>
        <control type="image">
            <visible>!Integer.IsGreater(container(99999).numitems,0) | Skin.HasSetting(disableExtendedFanart) | ListItem.IsParentFolder</visible>
            <posx>0</posx>
            <posy>0</posy>
            <include>dimensionsFullscreen</include>
            <texture>$INFO[container.Art(fanart)]</texture>
            <colordiffuse>66ffffff</colordiffuse>
            <aspectratio>stretch</aspectratio>
			<include>kenBurnsey</include>
        </control>
    </include>

    <!--keyboard autocomplete-->
    <include name="AutoComplete">
        <control type="group">
            <visible>!String.String.IsEmpty(Control.GetLabel(312).index(1)) + !Control.IsVisible(313) + !Skin.HasSetting(Touch)</visible>
            <posx>0</posx>
            <posy>0</posy>
            <control type="group">
                <animation effect="fade" time="300" tween="cubic" start="0" end="100" reversible="false" condition="!String.String.IsEmpty(Container(5000).ListItem.Label)">Conditional</animation>
                <animation effect="fade" time="150" tween="cubic" start="100" end="0" reversible="false" condition="String.String.IsEmpty(Container(5000).ListItem.Label)">Conditional</animation>
            </control>
            <control type="panel" id="5000">
                <posx>col-5-begin</posx>
                <posy>-36</posy>
                <width>16-col</width>
                <height>2-row</height>
                <onleft>5000</onleft>
                <onright>5000</onright>
                <ondown>312</ondown>
                <onback>noop</onback>
                <orientation>horizontal</orientation>
                <itemlayout height="2-row" width="4-col">
                    <control type="label">
                        <posx>0</posx>
                        <posy>0</posy>
                        <width>4-col-gutter</width>
                        <height>2-row</height>
                        <align>center</align>
                        <textcolor>textDisabled</textcolor>
                        <font>itemTitle</font>
                        <label>$INFO[ListItem.Label]</label>
                    </control>
                </itemlayout>
                <focusedlayout height="2-row" width="4-col">
                    <control type="label">
                        <posx>0</posx>
                        <posy>0</posy>
                        <width>4-col-gutter</width>
                        <height>2-row</height>
                        <align>center</align>
                        <textcolor>$VAR[highlight]</textcolor>
                        <font>itemTitle</font>
                        <label>$INFO[ListItem.Label]</label>
                    </control>
                </focusedlayout>
                <content>plugin://plugin.program.autocompletion?info=autocomplete&amp;&amp;id=$INFO[Control.GetLabel(312).index(1)]&amp;&amp;limit=8</content>
            </control>
        </control>
        <control type="group">
            <visible>!String.String.IsEmpty(Control.GetLabel(312).index(1)) + !Control.IsVisible(313) + Skin.HasSetting(Touch)</visible>
            <posx>0</posx>
            <posy>-150</posy>
            <control type="group">
                <animation effect="fade" time="300" tween="cubic" start="0" end="100" reversible="false" condition="!String.String.IsEmpty(Container(5000).ListItem.Label)">Conditional</animation>
                <animation effect="fade" time="150" tween="cubic" start="100" end="0" reversible="false" condition="String.String.IsEmpty(Container(5000).ListItem.Label)">Conditional</animation>
            </control>
            <control type="panel" id="5000">
                <posx>col-5-begin</posx>
                <posy>-36</posy>
                <width>16-col</width>
                <height>2-row</height>
                <onleft>5000</onleft>
                <onright>5000</onright>
                <ondown>312</ondown>
                <onback>noop</onback>
                <orientation>horizontal</orientation>
                <itemlayout height="2-row" width="4-col">
                    <control type="label">
                        <posx>0</posx>
                        <posy>0</posy>
                        <width>4-col-gutter</width>
                        <height>2-row</height>
                        <align>center</align>
                        <textcolor>textDisabled</textcolor>
                        <font>itemTitle</font>
                        <label>$INFO[ListItem.Label]</label>
                    </control>
                </itemlayout>
                <focusedlayout height="2-row" width="4-col">
                    <control type="label">
                        <posx>0</posx>
                        <posy>0</posy>
                        <width>4-col-gutter</width>
                        <height>2-row</height>
                        <align>center</align>
                        <textcolor>$VAR[highlight]</textcolor>
                        <font>itemTitle</font>
                        <label>$INFO[ListItem.Label]</label>
                    </control>
                </focusedlayout>
                <content>plugin://plugin.program.autocompletion?info=autocomplete&amp;&amp;id=$INFO[Control.GetLabel(312).index(1)]&amp;&amp;limit=8</content>
            </control>
        </control>
    </include>
    <!--modal dialogs-->
    <include name="modalDialog">
        <control type="image">
            <include>dimensionsFullscreen</include>
            <texture>colors/black.png</texture>
            <colordiffuse>e9FFFFFF</colordiffuse>
            <aspectratio>stretch</aspectratio>
        </control>
        <control type="image">
            <include>dimensionsFullscreen</include>
            <texture>vignette.png</texture>
            <colordiffuse>ffffffff</colordiffuse>
            <aspectratio>stretch</aspectratio>
        </control>
    </include>
    <!--Global background-->
    <include name="globalBackground">
		<control type="image">
		   <include>dimensionsFullscreen</include>
           <texture>colors/black.png</texture>
           <colordiffuse>ffFFFFFF</colordiffuse>
           <aspectratio>stretch</aspectratio>
       </control> 
       <control type="image">
           <include>dimensionsFullscreen</include>
           <texture>colors/white.png</texture>
           <colordiffuse>background</colordiffuse>
           <aspectratio>stretch</aspectratio>
       </control>
    </include>
    <include name="Screensaver">
		<control type="image">
		   <include>dimensionsFullscreen</include>
           <texture>colors/black.png</texture>
           <colordiffuse>ffFFFFFF</colordiffuse>
           <aspectratio>stretch</aspectratio>
       </control> 
    </include>
	<!--page header-->
	<include name="pageHeader">
        
		<control type="group">
        <visible>[Control.IsVisible(50) | Control.IsVisible(502) | Control.IsVisible(591) | Control.IsVisible(509) | Control.IsVisible(504)] + !window.isactive(1130)</visible>
			<posx>col-1-begin</posx>
            <posy>row-2-begin</posy>
			<!--title-->
			<control type="label">
                <visible>!Control.IsVisible(509)</visible>
	            <posx>0</posx>
	            <posy>0</posy>
	            <width>18-col</width>
	            <font>sectionTitle</font>
	            <label>$VAR[listTitle]</label>
	            <textcolor>textActive</textcolor>
	        </control>
	        <!--subtitle-->
	        <control type="label">
                <visible>!Control.IsVisible(509)</visible>
	            <posx>0</posx>
	            <posy>26</posy>
	            <width>12-col</width>
				<height>2-row</height>
	            <font>menuTitle2</font>
	            <label>$VAR[listSubTitle]</label>
	            <textcolor>textActive</textcolor>
	        </control>
			<!--time-->
			<control type="label">
	            <posx>24-col</posx>
	            <posy>0</posy>
	            <width>12-col</width>
	            <align>right</align>
	            <font>sectionTitle</font>
	            <label>[B]$INFO[System.Time][/B]</label>
	            <textcolor>textActive</textcolor>
	        </control>
			<!--date-->
	        <control type="label">
	            <posx>24-col</posx>
	            <posy>26</posy>
	            <width>12-col</width>
				<height>2-row</height>
				<align>right</align>
	            <font>menuTitle2</font>
	            <label>$INFO[System.Date(DDD)], $INFO[system.Date(mmm d)]</label>
	            <textcolor>textActive</textcolor>
	        </control>
		</control>
	</include>
    <include name="pageHeadervideonav">
        
		<control type="group">
        <visible>Control.IsVisible(503) | Control.IsVisible(609) | Control.IsVisible(51) | Control.IsVisible(52) | Control.IsVisible(505)</visible>
			<posx>col-1-begin</posx>
            <posy>960</posy>
			<!--title-->
			<control type="label">
	            <posx>-80</posx>
	            <posy>0</posy>
	            <width>18-col</width>
	            <font>sectionTitle</font>
	            <label>$VAR[listTitle]</label>
	            <textcolor>$VAR[Home]</textcolor>
	        </control>
	        <!--subtitle-->
	        <control type="label">
	            <posx>-80</posx>
	            <posy>26</posy>
	            <width>12-col</width>
				<height>2-row</height>
	            <font>menuTitle2</font>
	            <label>$VAR[listSubTitle]</label>
	            <textcolor>$VAR[Home]</textcolor>
	        </control>
			<!--time-->
			<control type="label">
	            <posx>1808</posx>
	            <posy>0</posy>
	            <width>12-col</width>
	            <align>right</align>
	            <font>sectionTitle</font>
	            <label>[B]$INFO[System.Time][/B]</label>
	            <textcolor>$VAR[Home]</textcolor>
	        </control>
			<!--date-->
	        <control type="label">
	            <posx>1808</posx>
	            <posy>26</posy>
	            <width>12-col</width>
				<height>2-row</height>
				<align>right</align>
	            <font>menuTitle2</font>
	            <label>$INFO[System.Date(DDD)], $INFO[system.Date(mmm d)]</label>
	            <textcolor>$VAR[Home]</textcolor>
	        </control>
		</control>
	</include>

    <include name="videolabel">
            <control type="group">
					<visible>!Control.IsVisible(50) + !window.isactive(1130) + !controlgroup(9000).hasfocus + !Control.IsVisible(504) + !Control.IsVisible(502) + !Control.IsVisible(509)</visible>
					<include>ViewAnimation</include>
					
					<!-- SETS -->
					<control type="group">
						<animation effect="fade" time="140" delay="100">Visible</animation>
						<animation effect="fade" time="140" delay="600">WindowOpen</animation>
						<left>450</left>
						<top>960</top>
						<control type="group">
							
							<animation effect="slide" end="0,-12">Conditional</animation>
							<animation effect="slide" end="0,22">Conditional</animation>
							<control type="image">
                    			<posx>-450</posx>
                    			<posy>-3</posy>
                    			<width>fullscreenwidth</width>
                    			<height>136</height>
                    			<texture>colors/listselect_fo.png</texture>
                    			<colordiffuse>$VAR[highlight]</colordiffuse>
                    			<aspectratio>stretch</aspectratio>
                			</control>
							<control type="image">
								<visible>!Control.IsVisible(51)</visible>
                    			<posx>-450</posx>
                    			<posy>-3</posy>
                    			<width>fullscreenwidth</width>
                    			<height>136</height>
                    			<texture>colors/listselect_fo.png</texture>
                    			<colordiffuse>$VAR[highlight]</colordiffuse>
                    			<aspectratio>stretch</aspectratio>
                			</control>
							<control type="label">
								<visible>!Control.IsVisible(51)</visible>
								<width>1020</width>
								<height>46</height>
								<align>center</align>
								<font>sectionTitle</font>
								<scroll>true</scroll>
								<textcolor>$VAR[Home]</textcolor>
								<label>[B]$INFO[ListItem.label][/B]</label>
							</control>
							<control type="label">
								<visible>!String.IsEmpty(ListItem.Duration)</visible>
								<width>1020</width>
								<height>46</height>
								<posy>45</posy>
								<align>center</align>
								<font>menuTitle2</font>
								<scroll>true</scroll>
								<textcolor>$VAR[Home]</textcolor>
								<label>$LOCALIZE[180]: $VAR[MinsToHourDurationVar]       $LOCALIZE[31160]: $INFO[ListItem.EndTimeResume]</label>
							</control>
							<control type="label">
								<visible>!Control.IsVisible(51)</visible>
								<width>1020</width>
								<height>46</height>
								<posy>80</posy>
								<align>center</align>
								<font>menuTitle2</font>
								<scroll>true</scroll>
								<textcolor>$VAR[Home]</textcolor>
								<label>$INFO[ListItem.Genre]</label>
							</control>
							<control type="button">
						<visible>Skin.hassetting(Touch) + !Skin.HasSetting(crosskey)</visible>
                    			<posx>-450</posx>
                    			<posy>-3</posy>
                    			<width>fullscreenwidth</width>
                    			<height>136</height>
                    			<focusedcolor></focusedcolor>
            					<texturefocus></texturefocus>
            					<colordiffuse></colordiffuse>
								<onclick>Back</onclick>
                		</control>							
							
						</control>
					</control>
				</control>
    </include>


    <!--busy indicator-->
    <include name="loadingIndicator">
        <control type="group">
            <animation type="Visible" reversible="false">
                <effect type="zoom" start="80" end="100" center="960,540" tween="back" time="240" />
                <effect type="fade" end="100" time="240" />
            </animation>
            <animation type="Hidden" reversible="false">
                <effect type="zoom" start="100" end="80" center="960,540" easing="in" tween="back" time="240" />
                <effect type="fade" start="100" end="0" time="240" />
            </animation>
            <visible>!Window.IsActive(startup) + !String.IsEmpty(container.foldername) + !Integer.IsGreater(container.numitems,0) + !ListItem.IsParentFolder | window.isactive(busydialog)</visible>
            <control type="image">
                <texture>colors/black.png</texture>
                <include>dimensionsFullscreen</include>
                <animation effect="fade" start="100" end="70" time="0" condition="true">Conditional</animation>
                <animation effect="fade" start="100" end="0" time="240" condition="Window.IsVisible(fullscreenvideo)">Conditional</animation>
                <animation effect="fade" end="100" time="560">WindowOpen</animation>
                <animation effect="fade" start="100" end="0" time="240">WindowClose</animation>
            </control>
            <control type="image">
                <depth>DepthMax</depth>
                <left>920</left>
                <top>513</top>
                <width>80</width>
                <height>80</height>
                <aspectratio>keep</aspectratio>
                <animation effect="rotate" end="-45" center="auto" time="280" delay="0" loop="true" reversible="false" condition="true">Conditional</animation>
                <texture colordiffuse="$VAR[highlight]">spinner.png</texture>
                <animation effect="fade" end="100" time="300" delay="200">WindowOpen</animation>
            </control>
            <control type="image">
                <depth>DepthMax</depth>
                <left>935</left>
                <top>528</top>
                <width>50</width>
                <height>50</height>
                <aspectratio>keep</aspectratio>
                <animation effect="rotate" end="45" center="auto" time="280" delay="0" loop="true" reversible="false" condition="true">Conditional</animation>
                <texture flipx="true" colordiffuse="$VAR[highlight_Shadow]">spinner.png</texture>
                <animation effect="fade" end="100" time="300" delay="200">WindowOpen</animation>
            </control>
        </control>
    </include>
     <!--conditional positioning for progress dialogs (avoid overlaps)-->
    <include name="progressPosition1"><posy>row-2-begin</posy></include>
    <include name="progressPosition2"><posy>row-6-begin</posy></include>
     
	<!--mini player window-->
    <include name="miniVideoPlayer">
        <control type="group">
            <visible>!Skin.hassetting(stopVideoOnMenu) + Player.HasVideo + !VideoPlayer.IsFullscreen + !SlideShow.IsActive</visible>
            <posx>col-20-begin</posx>
            <posy>12</posy>
            <control type="image">
                <posx>0</posx>
                <posy>0</posy>
                <width>444</width>
                <height>255</height>
                <aspectratio>stretch</aspectratio>
                <texture>colors/black.png</texture>
                <bordertexture border="6" colordiffuse="overlay">colors/black.png</bordertexture>
                <bordersize>6</bordersize>
            </control>
            <control type="videowindow">
                <posx>6</posx>
                <posy>6</posy>
                <width>6-col</width>
                <height>243</height>
            </control>
        </control>
    </include>

	<!--touchscreen screen edge controls-->
	<include name="touchscreenControls">
		
	</include>

    <!--Battery-->
	<include name="Battery">
        <control type="group">
				<visible>Skin.HasSetting(show_battery)</visible>
				<posx>950</posx>
				<posy>0</posy>
                <animation type="conditional" condition="player.hasvideo + !VideoPlayer.IsFullscreen" reversible="true">
		    		<effect type="slide" start="0" end="-450" time="200" delay="0"/>
		        </animation>
				<control type="grouplist">
					<posx>0</posx>
					<posy>8</posy>
					<width>24-col</width>
                    <height>1-row</height>
					<align>center</align>
					<itemgap>-20</itemgap>
					<orientation>horizontal</orientation>
					<control type="label">
                        <visible>Integer.IsLessorEqual(System.BatteryLevel,100)</visible>
                        <visible>Integer.IsGreaterorEqual(System.BatteryLevel,85)</visible>
						<posx>0</posx>
						<posy>0</posy>
						<width>1-col-gutter</width>
						<height>1-row</height>
						<align>center</align>
						<aligny>center</aligny>
						<font>symbolLarge</font>
						<textcolor>ff7fff00</textcolor>
						<shadowcolor></shadowcolor>
						<label></label>
					</control>
                    <control type="label">
                        <visible>Integer.IsLessorEqual(System.BatteryLevel,84)</visible>
                        <visible>Integer.IsGreaterorEqual(System.BatteryLevel,71)</visible>
						<posx>0</posx>
						<posy>0</posy>
						<width>1-col-gutter</width>
						<height>1-row</height>
						<align>center</align>
						<aligny>center</aligny>
						<font>symbolLarge</font>
						<textcolor>ff7FFF00</textcolor>
						<shadowcolor></shadowcolor>
						<label></label>
					</control>
                    <control type="label">
                        <visible>Integer.IsLessorEqual(System.BatteryLevel,70)</visible>
                        <visible>Integer.IsGreaterorEqual(System.BatteryLevel,51)</visible>
						<posx>0</posx>
						<posy>0</posy>
						<width>1-col-gutter</width>
						<height>1-row</height>
						<align>center</align>
						<aligny>center</aligny>
						<font>symbolLarge</font>
						<textcolor>ff7FFF00</textcolor>
						<shadowcolor></shadowcolor>
						<label></label>
					</control>
                    <control type="label">
                        <visible>Integer.IsLessorEqual(System.BatteryLevel,50)</visible>
                        <visible>Integer.IsGreaterorEqual(System.BatteryLevel,41)</visible>
						<posx>0</posx>
						<posy>0</posy>
						<width>1-col-gutter</width>
						<height>1-row</height>
						<align>center</align>
						<aligny>center</aligny>
						<font>symbolLarge</font>
						<textcolor>ffFFFF00</textcolor>
						<shadowcolor></shadowcolor>
						<label></label>
					</control>
                    <control type="label">
                        <visible>Integer.IsLessorEqual(System.BatteryLevel,40)</visible>
                        <visible>Integer.IsGreaterorEqual(System.BatteryLevel,11)</visible>
						<posx>0</posx>
						<posy>0</posy>
						<width>1-col-gutter</width>
						<height>1-row</height>
						<align>center</align>
						<aligny>center</aligny>
						<font>symbolLarge</font>
						<textcolor>ffFF4500</textcolor>
						<shadowcolor></shadowcolor>
						<label></label>
					</control>
                    <control type="label">
                        <visible>Integer.IsLessorEqual(System.BatteryLevel,10)</visible>
						<posx>0</posx>
						<posy>0</posy>
						<width>1-col-gutter</width>
						<height>1-row</height>
						<align>center</align>
						<aligny>center</aligny>
						<font>symbolLarge</font>
						<textcolor>ffFF0000</textcolor>
						<shadowcolor></shadowcolor>
                        <animation type="conditional" condition="true" loop="true">
                            <effect type="fade" start="0" end="100" time="1000"/>
                            <effect type="fade" start="100" end="0" time="1000" delay="1000"/>
                        </animation>
						<label></label>
					</control>
					<control type="label">
						<posx></posx>
						<posy>0</posy>
						<width>110</width>
						<height>1-row</height>
						<align>center</align>
						<aligny>center</aligny>
						<font>buttonTitle</font>
						<textcolor>textActive</textcolor>
						<shadowcolor></shadowcolor>
						<label>$INFO[System.BatteryLevel]</label>
					</control>
			    </control>
		</control>
    </include>
    <include name="slidebuttons">
                <animation type="conditional" condition="!player.hasmedia + Integer.IsEqual(System.AddonUpdateCount,0) + !Skin.HasSetting(Further_apart) + Skin.HasSetting(Settings)" reversible="true">
		    		<effect type="slide" start="0" end="0" time="0" delay="0"/>
		    	</animation>
		   	 	<animation type="conditional" condition="player.hasmedia + Integer.IsEqual(System.AddonUpdateCount,0) + !Skin.HasSetting(Further_apart) + Skin.HasSetting(Settings)" reversible="true">
		    		<effect type="slide" start="0,0" end="-38" time="0" delay="0"/>
        		</animation>
				<animation type="conditional" condition="player.hasmedia + Integer.IsGreater(System.AddonUpdateCount,0) + !Skin.HasSetting(Further_apart) + Skin.HasSetting(Settings)" reversible="true">
		    		<effect type="slide" start="0" end="-76" time="0" delay="0"/>
        		</animation>
				<animation type="conditional" condition="!player.hasmedia + Integer.IsGreater(System.AddonUpdateCount,0) + !Skin.HasSetting(Further_apart) + Skin.HasSetting(Settings)" reversible="true">
		    		<effect type="slide" start="0" end="-38" time="0" delay="0"/>
        		</animation>
                
				<animation type="conditional" condition="!player.hasmedia + Integer.IsEqual(System.AddonUpdateCount,0) + Skin.HasSetting(Further_apart) + Skin.HasSetting(Settings)" reversible="true">
		    		<effect type="slide" start="0" end="-70" time="0" delay="0"/>
		    	</animation>
		   	 	<animation type="conditional" condition="player.hasmedia + Integer.IsEqual(System.AddonUpdateCount,0) + Skin.HasSetting(Further_apart) + Skin.HasSetting(Settings)" reversible="true">
		    		<effect type="slide" start="0,0" end="-145" time="0" delay="0"/>
        		</animation>
				<animation type="conditional" condition="player.hasmedia + Integer.IsGreater(System.AddonUpdateCount,0) + Skin.HasSetting(Further_apart) + Skin.HasSetting(Settings)" reversible="true">
		    		<effect type="slide" start="0" end="-215" time="0" delay="0"/>
        		</animation>
				<animation type="conditional" condition="!player.hasmedia + Integer.IsGreater(System.AddonUpdateCount,0) + Skin.HasSetting(Further_apart) + Skin.HasSetting(Settings)" reversible="true">
		    		<effect type="slide" start="0" end="-145" time="0" delay="0"/>
        		</animation>

                <animation type="conditional" condition="!player.hasmedia + Integer.IsEqual(System.AddonUpdateCount,0) + !Skin.HasSetting(Further_apart) + !Skin.HasSetting(Settings)" reversible="true">
		    		<effect type="slide" start="0" end="38" time="0" delay="0"/>
		    	</animation>
		   	 	<animation type="conditional" condition="player.hasmedia + Integer.IsEqual(System.AddonUpdateCount,0) + !Skin.HasSetting(Further_apart) + !Skin.HasSetting(Settings)" reversible="true">
		    		<effect type="slide" start="0,0" end="0" time="0" delay="0"/>
        		</animation>
				<animation type="conditional" condition="player.hasmedia + Integer.IsGreater(System.AddonUpdateCount,0) + !Skin.HasSetting(Further_apart) + !Skin.HasSetting(Settings)" reversible="true">
		    		<effect type="slide" start="0" end="-38" time="0" delay="0"/>
        		</animation>
				<animation type="conditional" condition="!player.hasmedia + Integer.IsGreater(System.AddonUpdateCount,0) + !Skin.HasSetting(Further_apart + !Skin.HasSetting(Settings))" reversible="true">
		    		<effect type="slide" start="0" end="0" time="0" delay="0"/>
        		</animation>
                
				<animation type="conditional" condition="!player.hasmedia + Integer.IsEqual(System.AddonUpdateCount,0) + Skin.HasSetting(Further_apart) + !Skin.HasSetting(Settings)" reversible="true">
		    		<effect type="slide" start="0" end="-0" time="0" delay="0"/>
		    	</animation>
		   	 	<animation type="conditional" condition="player.hasmedia + Integer.IsEqual(System.AddonUpdateCount,0) + Skin.HasSetting(Further_apart) + !Skin.HasSetting(Settings)" reversible="true">
		    		<effect type="slide" start="0,0" end="-70" time="0" delay="0"/>
        		</animation>
				<animation type="conditional" condition="player.hasmedia + Integer.IsGreater(System.AddonUpdateCount,0) + Skin.HasSetting(Further_apart) + !Skin.HasSetting(Settings)" reversible="true">
		    		<effect type="slide" start="0" end="-145" time="0" delay="0"/>
        		</animation>
				<animation type="conditional" condition="!player.hasmedia + Integer.IsGreater(System.AddonUpdateCount,0) + Skin.HasSetting(Further_apart) + !Skin.HasSetting(Settings)" reversible="true">
		    		<effect type="slide" start="0" end="-70" time="0" delay="0"/>
        		</animation>
                
    </include>

    <include name="slidebuttons_Android">
				<animation type="conditional" condition="System.Platform.Android + Skin.HasSetting(Further_apart) + !Skin.HasSetting(Youtube) + Skin.HasSetting(SmartTube)" reversible="true">
		    		<effect type="slide" start="0" end="-186" time="0" delay="0"/>
        		</animation>
                <animation type="conditional" condition="System.Platform.Android + Skin.HasSetting(Further_apart) + Skin.HasSetting(Youtube) + !Skin.HasSetting(SmartTube)" reversible="true">
		    		<effect type="slide" start="0" end="-186" time="0" delay="0"/>
        		</animation>
                <animation type="conditional" condition="System.Platform.Android + !Skin.HasSetting(Further_apart) + Skin.HasSetting(Youtube) + Skin.HasSetting(SmartTube)" reversible="true">
		    		<effect type="slide" start="0" end="0" time="0" delay="0"/>
        		</animation>
                <animation type="conditional" condition="System.Platform.Android + Skin.HasSetting(Further_apart) + !Skin.HasSetting(Youtube) + !Skin.HasSetting(SmartTube)" reversible="true">
		    		<effect type="slide" start="0" end="-110" time="0" delay="0"/>
        		</animation>
                <animation type="conditional" condition="System.Platform.Android + !Skin.HasSetting(Further_apart) + !Skin.HasSetting(Youtube) + !Skin.HasSetting(SmartTube)" reversible="true">
		    		<effect type="slide" start="0" end="30" time="0" delay="0"/>
        		</animation>
                <animation type="conditional" condition="System.Platform.Android + !Skin.HasSetting(Further_apart) + Skin.HasSetting(Youtube) + Skin.HasSetting(SmartTube)" reversible="true">
		    		<effect type="slide" start="0" end="-40" time="0" delay="0"/>
        		</animation>
                <animation type="conditional" condition="System.Platform.Android + Skin.HasSetting(Further_apart) + Skin.HasSetting(Youtube) + Skin.HasSetting(SmartTube)" reversible="true">
		    		<effect type="slide" start="0" end="-260" time="0" delay="0"/>
        		</animation>
    </include>

    <!-- not in use old
    <include name= "weather">
        <control type="multiimage">
            <visible>$EXP[hasWeather] + Skin.HasSetting(Weather icons) + Skin.HasSetting(weather icons animated)</visible>
			<posx>1000</posx>
            <posy>-200</posy>
            <width>200</width>
            <height>200</height>
			<imagepath>resource://resource.images.weathericons.hd.animated/resources/$INFO[weather.FanartCode]</imagepath>
			<timeperimage>100</timeperimage>
			<fadetime></fadetime>
			<pauseatend></pauseatend>
			<randomize>false</randomize>
			<loop>yes</loop>
			<aspectratio>scale</aspectratio>
        </control>
        <control type="image">
            <visible>$EXP[hasWeather] + Skin.HasSetting(Weather icons) + !Skin.HasSetting(weather icons animated)</visible>
            <posx>1000</posx>
            <posy>-200</posy>
            <width>200</width>
            <height>200</height>
            <texture>Weathericons/$INFO[weather.FanartCode].png</texture>
			<colordiffuse></colordiffuse>
        </control>
    </include>
    -->


    <include name="keyboard select">
        <control type="group">
                <visible>$PARAM[visible]</visible>
                <posx>$PARAM[posx]</posx>
                <posy>$PARAM[posy]</posy>
                <!--invisible button for background-->
                <control type="button">
                    <posx>-127</posx>
                    <posy>-2</posy>
                    <width>5-col</width>
                    <height>7-col</height>
                    <focusedcolor>00FFFFFF</focusedcolor>
                    <texturefocus colordiffuse="00FFFFFF">Colors/white.png</texturefocus>
                    <texturenofocus>00FFFFFF</texturenofocus>
                    <aspectratio>stretch</aspectratio>
                    <visible>Skin.HasSetting(crosskey)</visible>
                </control>
                <!--row 1-->
                <control type="button">
                    <description>1 button</description>
                    <label></label>
                    <posx>0</posx>
                    <posy>0</posy>
                    <width>100</width>
                    <height>100</height>
                    <align>center</align>
                    <onclick>setfocus($PARAM[focus])</onclick>
                    <onclick>$PARAM[up]</onclick>
                    <font>symbol</font>
                    <texturenofocus colordiffuse="$PARAM[color]">colors/white.png</texturenofocus>
                    <texturefocus colordiffuse="$VAR[highlight]">colors/white.png</texturefocus>
                    <focusedcolor>$VAR[Home]</focusedcolor>
                    <textcolor>textActive</textcolor>
                    <visible>Skin.HasSetting(crosskey) + $PARAM[upview]</visible>
                </control>
                <control type="button">
                    <description>1 button</description>
                    <label></label>
                    <posx>-125</posx>
                    <posy>125</posy>
                    <width>100</width>
                    <height>100</height>
                    <align>center</align>
                    <onclick>setfocus($PARAM[focus])</onclick>
                    <onclick>$PARAM[left]</onclick>
                    <font>symbol</font>
                    <texturenofocus colordiffuse="$PARAM[color]">colors/white.png</texturenofocus>                    <texturefocus colordiffuse="$VAR[highlight]">colors/white.png</texturefocus>
                    <focusedcolor>$VAR[Home]</focusedcolor>
                    <textcolor>textActive</textcolor>
                    <visible>Skin.HasSetting(crosskey) + $PARAM[leftview]</visible>
                </control>
                
                <control type="button">
                    <description>3 button</description>
                    <label></label>
                    <posx>0</posx>
                    <posy>265</posy>
                    <width>100</width>
                    <height>100</height>
                    <align>center</align>
                    <onclick>setfocus($PARAM[focus])</onclick>
                    <onclick>$PARAM[down]</onclick>
                    <font>symbol</font>
                    <texturenofocus colordiffuse="$PARAM[color]">colors/white.png</texturenofocus>                    <texturefocus colordiffuse="$VAR[highlight]">colors/white.png</texturefocus>
                    <texturefocus colordiffuse="$VAR[highlight]">colors/white.png</texturefocus>
                    <focusedcolor>$VAR[Home]</focusedcolor>
                    <textcolor>textActive</textcolor>
                    <visible>Skin.HasSetting(crosskey) + $PARAM[downview]</visible>
                </control>
                <control type="button">
                    <description>4 button</description>
                    <label></label>
                    <posx>125</posx>
                    <posy>125</posy>
                    <width>100</width>
                    <height>100</height>
                    <align>center</align>
                    <onclick>setfocus($PARAM[focus])</onclick>
                    <onclick>$PARAM[right]</onclick>
                    <font>symbol</font>
                    <texturenofocus colordiffuse="$PARAM[color]">colors/white.png</texturenofocus>                    <texturefocus colordiffuse="$VAR[highlight]">colors/white.png</texturefocus>
                    <texturefocus colordiffuse="$VAR[highlight]">colors/white.png</texturefocus>
                    <focusedcolor>$VAR[Home]</focusedcolor>
                    <textcolor>textActive</textcolor>
                    <visible>Skin.HasSetting(crosskey) + $PARAM[rightview]</visible>
                </control>

                <control type="button">
                    <description>4 button</description>
                    <label>✓</label>
                    <posx>0</posx>
                    <posy>125</posy>
                    <width>100</width>
                    <height>100</height>
                    <align>center</align>
                    <texturenofocus colordiffuse="$PARAM[color]">colors/white.png</texturenofocus>                    <texturefocus colordiffuse="$VAR[highlight]">colors/white.png</texturefocus>
                    <texturefocus colordiffuse="$VAR[highlight]">colors/white.png</texturefocus>
                    <onclick>setfocus($PARAM[focus])</onclick>
                    <onclick>$PARAM[select]</onclick>
                    
                    <font>symbol</font>
                    <texturenofocus colordiffuse="$PARAM[color]">colors/white.png</texturenofocus>                    <texturefocus colordiffuse="$VAR[highlight]">colors/white.png</texturefocus>
                    <texturefocus colordiffuse="$VAR[highlight]">colors/white.png</texturefocus>
                    <focusedcolor>$VAR[Home]</focusedcolor>
                    <textcolor>textActive</textcolor>
                    <visible>Skin.HasSetting(crosskey) + $PARAM[selectview]</visible>
                </control>

                <control type="button">
                    <description>Backspace button</description>
                    <label>31253</label>
                    <posx>-60</posx>
                    <posy>400</posy>
                    <width>3-col</width>
                    <height>100</height>
                    <align>center</align>
                    <textwidth>180</textwidth>
                    <onclick>$PARAM[back]</onclick>
                    <texturenofocus colordiffuse="$PARAM[color]">colors/white.png</texturenofocus>                    <texturefocus colordiffuse="$VAR[highlight]">colors/white.png</texturefocus>
                    <texturefocus colordiffuse="$VAR[highlight]">colors/white.png</texturefocus>
                    <focusedcolor>$VAR[Home]</focusedcolor>
                    <textcolor>textActive</textcolor>
                    <font>buttonTitle</font>
                    <visible>Skin.HasSetting(crosskey)</visible>
                </control>
            </control>
    </include>




    <include name="keyboard select osd">
        <control type="group">
                <visible>$PARAM[visible]</visible>
                <posx>-100%</posx>
                <posy>25%</posy>
                <!--row 1-->
                <control type="button">
                    <description>1 button</description>
                    <label></label>
                    <posx>0</posx>
                    <posy>0</posy>
                    <width>100</width>
                    <height>100</height>
                    <align>center</align>
                    <onclick>setfocus($PARAM[focus])</onclick>
                    <onclick>$PARAM[up]</onclick>
                    <font>symbol</font>
                    <texturenofocus colordiffuse="keyboardInactive">colors/white.png</texturenofocus>
                    <texturefocus colordiffuse="$VAR[highlight]">colors/white.png</texturefocus>
                    <focusedcolor>$VAR[Home]</focusedcolor>
                    <textcolor>textActive</textcolor>
                    <visible>Skin.HasSetting(crosskey)</visible>
                </control>
                <control type="button">
                    <description>1 button</description>
                    <label></label>
                    <posx>-125</posx>
                    <posy>125</posy>
                    <width>100</width>
                    <height>100</height>
                    <align>center</align>
                    <onclick>setfocus($PARAM[focus])</onclick>
                    <onclick>$PARAM[left]</onclick>
                    <font>symbol</font>
                    <texturenofocus colordiffuse="keyboardInactive">colors/white.png</texturenofocus>
                    <texturefocus colordiffuse="$VAR[highlight]">colors/white.png</texturefocus>
                    <focusedcolor>$VAR[Home]</focusedcolor>
                    <textcolor>textActive</textcolor>
                    <visible>Skin.HasSetting(crosskey)</visible>
                </control>
                
                <control type="button">
                    <description>3 button</description>
                    <label></label>
                    <posx>0</posx>
                    <posy>265</posy>
                    <width>100</width>
                    <height>100</height>
                    <align>center</align>
                    <onclick>setfocus($PARAM[focus])</onclick>
                    <onclick>$PARAM[down]</onclick>
                    <font>symbol</font>
                    <texturenofocus colordiffuse="keyboardInactive">colors/white.png</texturenofocus>
                    <texturefocus colordiffuse="$VAR[highlight]">colors/white.png</texturefocus>
                    <focusedcolor>$VAR[Home]</focusedcolor>
                    <textcolor>textActive</textcolor>
                    <visible>Skin.HasSetting(crosskey)</visible>
                </control>
                <control type="button">
                    <description>4 button</description>
                    <label></label>
                    <posx>125</posx>
                    <posy>125</posy>
                    <width>100</width>
                    <height>100</height>
                    <align>center</align>
                    <onclick>setfocus($PARAM[focus])</onclick>
                    <onclick>$PARAM[right]</onclick>
                    <font>symbol</font>
                    <texturenofocus colordiffuse="keyboardInactive">colors/white.png</texturenofocus>
                    <texturefocus colordiffuse="$VAR[highlight]">colors/white.png</texturefocus>
                    <focusedcolor>$VAR[Home]</focusedcolor>
                    <textcolor>textActive</textcolor>
                    <visible>Skin.HasSetting(crosskey)</visible>
                </control>

                <control type="button">
                    <description>4 button</description>
                    <label>✓</label>
                    <posx>0</posx>
                    <posy>125</posy>
                    <width>100</width>
                    <height>100</height>
                    <align>center</align>
                    <onclick>setfocus($PARAM[focus])</onclick>
                    <onclick>$PARAM[select]</onclick>
                    <font>symbol</font>
                    <texturenofocus colordiffuse="keyboardInactive">colors/white.png</texturenofocus>
                    <texturefocus colordiffuse="$VAR[highlight]">colors/white.png</texturefocus>
                    <focusedcolor>$VAR[Home]</focusedcolor>
                    <textcolor>textActive</textcolor>
                    <visible>Skin.HasSetting(crosskey) + !window.isactive(12901)</visible>
                </control>

                <control type="button">
                    <description>Backspace button</description>
                    <label>31253</label>
                    <posx>-60</posx>
                    <posy>400</posy>
                    <width>3-col</width>
                    <height>100</height>
                    <align>center</align>
                    <textwidth>180</textwidth>
                    <onclick>back</onclick>
                    <texturenofocus colordiffuse="keyboardInactive">colors/white.png</texturenofocus>
                    <texturefocus colordiffuse="$VAR[highlight]">colors/white.png</texturefocus>
                    <focusedcolor>$VAR[Home]</focusedcolor>
                    <textcolor>textActive</textcolor>
                    <font>buttonTitle</font>
                    <visible>Skin.HasSetting(crosskey)</visible>
                </control>  
            </control>
    </include>


    
    <!--Backbutton-->
    <include name="Backbutton">
        <control type="button" id="80000">
			<visible>Skin.HasSetting(Touch)</visible>
			<posx>0</posx>
            <posy>0</posy>
            <width>100%</width>
            <height>100%</height>
			<align>center</align>
            <textcolor>00FFFFFF</textcolor>
        		<focusedcolor>00FFFFFF</focusedcolor>
        		<texturefocus>00FFFFFF</texturefocus>
        		<texturenofocus>00FFFFFF</texturenofocus>
        		<textoffsetx>24</textoffsetx>
        		<disabledcolor>00FFFFFF</disabledcolor>
        		<invalidcolor>00FFFFFF</invalidcolor>
			<onclick>Back</onclick>
		</control>
    </include>

    <include name="Backbuttoncross">
        <control type="button" id="80000">
			<visible>Skin.HasSetting(Touch) + !Skin.HasSetting(crosskey)</visible>
			<posx>0</posx>
            <posy>0</posy>
            <width>100%</width>
            <height>100%</height>
			<align>center</align>
            <textcolor>00FFFFFF</textcolor>
        		<focusedcolor>00FFFFFF</focusedcolor>
        		<texturefocus>00FFFFFF</texturefocus>
        		<texturenofocus>00FFFFFF</texturenofocus>
        		<textoffsetx>24</textoffsetx>
        		<disabledcolor>00FFFFFF</disabledcolor>
        		<invalidcolor>00FFFFFF</invalidcolor>
			<onclick>Back</onclick>
		</control>
    </include>

    <include name="HiddenList">
		<left>-100</left>
		<top>-100</top>
		<width>100</width>
		<height>100</height>
		<itemlayout height="100" width="100" />
		<focusedlayout height="100" width="100" />
	</include>

    <include name="ButtonInfoDialogsCommonValues">
		<height>60</height>
		<width>254</width>
		<textoffsetx>0</textoffsetx>
		<align>center</align>
		<aligny>center</aligny>
		<font>buttonTitle</font>
		<textcolor>grey</textcolor>
		<focusedcolor>black</focusedcolor>
    </include>
    <include name="pvrguidewidth">
        <include  condition="Skin.HasSetting(Touch)">pvrguidewidth1</include>
        <include  condition="!Skin.HasSetting(Touch)">pvrguidewidth2</include>
    </include>
    <include name="pvrguidewidth1">
        <width>20-col</width>
    </include>
    <include name="pvrguidewidth2">
        <width>24-col</width>
    </include>

    <include name="view_503_posx">
        <include  condition="Skin.HasSetting(Touch)">view_503_posx1</include>
        <include  condition="!Skin.HasSetting(Touch)">view_503_posx2</include>
    </include>
    <include name="view_503_posx1">
        <width>1008</width>
    </include>
    <include name="view_503_posx2">
        <width>fullscreenWidth</width>
    </include>

    <include name="scrollbarwidth">
        <include  condition="Skin.HasSetting(Touch)">scrollbarwidth1</include>
        <include  condition="!Skin.HasSetting(Touch)">scrollbarwidth2</include>
    </include>
    <include name="scrollbarwidth1">
        <width>850</width>
    </include>
    <include name="scrollbarwidth2">
        <width>12</width>
    </include>
    <include name="scrollbarposx">
        <include  condition="Skin.HasSetting(Touch)">scrollbarposx1</include>
        <include  condition="!Skin.HasSetting(Touch)">scrollbarposx2</include>
    </include>
    <include name="scrollbarposx1">
        <posx>0</posx>
    </include>
    <include name="scrollbarposx2">
        <posx>-36</posx>
    </include>
    <include name="scrollbarcolor">
        <include  condition="Skin.HasSetting(Touch)">scrollbarcolor1</include>
        <include  condition="!Skin.HasSetting(Touch)">scrollbarcolor2</include>
    </include>
    <include name="scrollbarcolor1">
        <texturesliderbackground colordiffuse="77black">colors/white.png</texturesliderbackground>
        <texturesliderbarfocus colordiffuse="77overlay">colors/white.png</texturesliderbarfocus>
    </include>
    <include name="scrollbarcolor2">
        <texturesliderbackground colordiffuse="overlay">colors/black.png</texturesliderbackground>
        <texturesliderbarfocus colordiffuse="$VAR[highlight]">colors/white.png</texturesliderbarfocus>
    </include>

    <include name="scrollbarposxosd">
        <include  condition="Skin.HasSetting(Touch)">scrollbarposx1osd</include>
        <include  condition="!Skin.HasSetting(Touch)">scrollbarposx2osd</include>
    </include>
    <include name="scrollbarposx1osd">
        <posx>0</posx>
    </include>
    <include name="scrollbarposx2osd">
        <posx>12r</posx>
    </include>

    <include name="scrollbarposxpvrchannels">
        <include  condition="Skin.HasSetting(Touch)">scrollbarposx1pvrchannels</include>
        <include  condition="!Skin.HasSetting(Touch)">scrollbarposx2pvrchannels</include>
    </include>
    <include name="scrollbarposx1pvrchannels">
        <posx>1%</posx>
    </include>
    <include name="scrollbarposx2pvrchannels">
        <posx>90%</posx>
    </include>

    <!--homemenu slide or grid-->
   <include name="homemenuslide">
        <include  condition="Skin.HasSetting(homemenuslide) + !Skin.HasSetting(homemenugrid) + !Skin.HasSetting(homemenuside)">homemenuslide1</include>
        <include  condition="Skin.HasSetting(homemenugrid) + !Skin.HasSetting(homemenuslide) + !Skin.HasSetting(homemenuside)">homemenuslide2</include>
        <include  condition="Skin.HasSetting(homemenuside) + !Skin.HasSetting(homemenuslide) + !Skin.HasSetting(homemenugrid)">homemenuslide3</include>
        <include  condition="!Skin.HasSetting(homemenuside) + !Skin.HasSetting(homemenuslide) + !Skin.HasSetting(homemenugrid)">homemenuslide2</include>
    </include>
    <include name="homemenuslide1">
        <width>fullscreenWidth</width>
	    <orientation>horizontal</orientation>
	    <height>3-row</height>
	    <posx>0</posx>
	    <posy>50%</posy>
        <colordiffuse>ffffff</colordiffuse>
        <onup>9005</onup>
		<ondown>setfocus(9001,0)</ondown>
        </include>
    <include name="homemenuslide2">
    	<width>18-col</width>
	    <orientation>vertical</orientation>
	    <height>12-row</height>
	    <posx>col-5-begin</posx>
	    <posy>row-12-begin</posy>
        <colordiffuse>77000000</colordiffuse>
        <onup>9005</onup>
		<ondown>setfocus(9001,0)</ondown>
    </include>
    <include name="homemenuslide3">
    	<width>4-col-textbox</width>
	    <orientation>vertical</orientation>
	    <height>fullscreenHeight</height>
	    <posx>0</posx>
	    <posy>0</posy>
        <colordiffuse>ffffff</colordiffuse>
        <onup>9000</onup>
        <ondown>9000</ondown>
        <onright condition="Skin.HasSetting(widget) + string.isempty(Control.GetLabel(7001))">9001</onright>
        <onright condition="Skin.HasSetting(widget)">7001</onright>
        <onright condition="!Skin.HasSetting(widget)">setfocus(9001,0)</onright>
        <onleft condition="Skin.HasSetting(widget) + System.Platform.Android">7001</onleft>
        <onleft condition="Skin.HasSetting(widget) + !System.Platform.Android">7001</onleft>
        <onleft condition="!Skin.HasSetting(widget) + System.Platform.Android">9005</onleft>
        <onleft condition="!Skin.HasSetting(widget) + !System.Platform.Android">setfocus(9001,0)</onleft>
    </include>

    <include name="homemenuslidecolor">
        <include  condition="Skin.HasSetting(homemenuslide) + !Skin.HasSetting(homemenugrid) + !Skin.HasSetting(homemenuside)">homemenuslide1color</include>
        <include  condition="Skin.HasSetting(homemenugrid) + !Skin.HasSetting(homemenuslide) + !Skin.HasSetting(homemenuside)">homemenuslide2color</include>
        <include  condition="Skin.HasSetting(homemenuside) + !Skin.HasSetting(homemenuslide) + !Skin.HasSetting(homemenugrid)">homemenuslide3color</include>
        <include  condition="!Skin.HasSetting(homemenuside) + !Skin.HasSetting(homemenuslide) + !Skin.HasSetting(homemenugrid)">homemenuslide2color</include>
    </include>
    <include name="homemenuslide1color">
        
        <colordiffuse>ffffff</colordiffuse>
    </include>
    <include name="homemenuslide2color">
    	
        <colordiffuse>77000000</colordiffuse>
    </include>
    <include name="homemenuslide3color">
    	
        <colordiffuse>ffffff</colordiffuse>
    </include>
    
    <include name="homemenukeycontrol">
        <include  condition="Skin.HasSetting(homemenuslide) + !Skin.HasSetting(homemenugrid) + !Skin.HasSetting(homemenuside)">homemenukeycontrol1</include>
        <include  condition="Skin.HasSetting(homemenugrid) + !Skin.HasSetting(homemenuslide) + !Skin.HasSetting(homemenuside)">homemenukeycontrol2</include>
        <include  condition="Skin.HasSetting(homemenuside) + !Skin.HasSetting(homemenuslide) + !Skin.HasSetting(homemenugrid)">homemenukeycontrol3</include>
        <include  condition="!Skin.HasSetting(homemenuside) + !Skin.HasSetting(homemenuslide) + !Skin.HasSetting(homemenugrid)">homemenukeycontrol2</include>
    </include>
    <include name="homemenukeycontrol1">
        <onup>9000</onup>
		<ondown>8001</ondown>
        </include>
    <include name="homemenukeycontrol2">
        <onup>9000</onup>
		<ondown>8001</ondown>
    </include>
    <include name="homemenukeycontrol3">
        <onup condition="Skin.HasSetting(widget) + !string.isempty(Control.GetLabel(7001))">7001</onup>
        <onup condition="Skin.HasSetting(widget) + string.isempty(Control.GetLabel(7001)) + !System.Platform.Android">9000</onup>
        <onup condition="Skin.HasSetting(widget) + string.isempty(Control.GetLabel(7001)) + System.Platform.Android">9005</onup>
        <onup condition="!Skin.HasSetting(widget) + System.Platform.Android">9005</onup>
        <onup condition="!Skin.HasSetting(widget) + !System.Platform.Android">9000</onup>
        <ondown>8001</ondown>
		<onright>9000</onright>
        <onleft>9000</onleft>
    </include>

    <include name="homemenukeycontrolandroid">
        <include  condition="Skin.HasSetting(homemenuslide) + !Skin.HasSetting(homemenugrid) + !Skin.HasSetting(homemenuside)">homemenukeycontrol1android</include>
        <include  condition="Skin.HasSetting(homemenugrid) + !Skin.HasSetting(homemenuslide) + !Skin.HasSetting(homemenuside)">homemenukeycontrol2android</include>
        <include  condition="Skin.HasSetting(homemenuside) + !Skin.HasSetting(homemenuslide) + !Skin.HasSetting(homemenugrid)">homemenukeycontrol3android</include>
        <include  condition="!Skin.HasSetting(homemenuside) + !Skin.HasSetting(homemenuslide) + !Skin.HasSetting(homemenugrid)">homemenukeycontrol2android</include>
    </include>
    <include name="homemenukeycontrol1android">
        <onup>9000</onup>
		<ondown>9000</ondown>
        </include>
    <include name="homemenukeycontrol2android">
        <onup>9000</onup>
		<ondown>9000</ondown>
    </include>
    <include name="homemenukeycontrol3android">
        <onup>9001</onup>
        <ondown>9001</ondown>
		<onright>9000</onright>
        <onleft>9000</onleft>
    </include>









    <include name="ButtonCommonValues">
		<width>375</width>
		<height>60</height>
		<textoffsetx>15</textoffsetx>
		<textcolor>$VAR[Home]</textcolor>
		<focusedcolor>$VAR[selected]</focusedcolor>
		<texturefocus colordiffuse="$VAR[highlight]">Colors/white.png</texturefocus>
		<textwidth>300</textwidth>
		<aligny>center</aligny>
		<font>buttonTitle</font>
		<radioposx>300</radioposx>
	</include>

    <include name="ShowCaseInfoPanelButtonsValues">
		<height>85</height>
		<width>501</width>
		<textoffsetx>15</textoffsetx>
		<aligny>top</aligny>
		<font>buttonTitle</font>
		<textcolor>textActive</textcolor>
		<focusedcolor>$VAR[Home]</focusedcolor>
	</include>

    <include name="MediaMenuTop">
		<top>80</top>
		<width>400</width>
		<height>1080</height>
		<onleft>9000</onleft>
		<onright>ClearProperty(MediaMenu,Home)</onright>
		<onright>50</onright>
		<onup>9000</onup>
		<ondown>9957</ondown>
		<onback>ClearProperty(MediaMenu,Home)</onback>
		<onback>50</onback>
		<include condition="Skin.HasSetting(KioskMode.Enabled)">KioskModeButton</include>
		<animation effect="fade" start="100" end="0" time="200" condition="Window.IsVisible(1128) | Window.IsVisible(1130) | Window.IsVisible(1131) | Window.IsVisible(1132)" reversible="true">Conditional</animation>
		
	</include>

    <include name="DefaultButtonsValues">
		<height>90</height>
		<width>501</width>
		<textoffsetx>15</textoffsetx>
		<aligny>top</aligny>
		<font>buttonTitle</font>
		<textcolor>white</textcolor>
		<shadowcolor>ff8a795d</shadowcolor>
		<focusedcolor>white</focusedcolor>
	</include>







   <!--debugging-->
    <include name="DialogID">
        <animation type="conditional" condition="!player.playing" reversible="true">
		    <effect type="slide" start="0,0" end="0,0" time="200" delay="0"/>
		    </animation>
		    <animation type="conditional" condition="!Window.isActive(home) + player.playing" reversible="true">
		    <effect type="slide" start="0,0" end="0,45" time="200" delay="0"/>
        </animation>
        <posx>15</posx>
        <posy>15</posy>
        <width>1395</width>
        <height>1-row</height>
        <font>smallStrong</font>
        <textcolor>textActive</textcolor>
        <align>left</align>
        <visible>Skin.HasSetting(DebugInfo)</visible>
    </include>
    <include name="WindowID">
        <animation type="conditional" condition="!player.playing" reversible="true">
		    <effect type="slide" start="0,0" end="0,0" time="200" delay="0"/>
		    </animation>
		    <animation type="conditional" condition="!Window.isActive(home) + player.playing" reversible="true">
		    <effect type="slide" start="0,0" end="0,45" time="200" delay="0"/>
        </animation>
        <posx>15</posx>
        <posy>15</posy>
        <width>1395</width> 
        <height>1-row</height>
        <font>smallStrong</font>
        <scroll>true</scroll>
        <textcolor>textActive</textcolor>
        <align>left</align>
        <label2></label2>
        <visible>Skin.HasSetting(DebugInfo)</visible>
    </include>
    <include name="DebugGrid">
        <control type="image">
            <include>dimensionsFullscreen</include>
            <texture>debuggrid1080.png</texture>
            <colordiffuse>77FFFFFF</colordiffuse>
            <visible>Skin.HasSetting(DebugGrid)</visible>
        </control>
    </include>







    <!--aeonocsilvio-->
    
</includes>
